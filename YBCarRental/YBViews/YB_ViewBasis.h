#ifndef YB_ViewBasis_H
#define YB_ViewBasis_H

#include <iostream>
#include <map>
#include <vector>
#include "YB_ViewItemBasis.h"
#include "YB_ViewMessage.h"
#include "YB_DataBasis.h"

using namespace std;
using namespace YBPersistence;

namespace YBConsoleViews
{
	class YB_ViewBasis : public YBPersistence::YB_DataBasis
	{
	public:
		//int* viewId;								//Obsoleted, replaced by Id in YB_DataBasis
		string ViewType;
		string Title;								//max limit to 64 characters
		int w, h;									//view size, same as window size but need be passed in.

		YB_ViewBasis();
		YB_ViewBasis(int* width, int* height);

		void AddViewItem(YB_ViewItemBasis item);
		void AddViewItems(vector<YB_ViewItemBasis> items);
		void AddViewItems(vector<string> itemsDef);

		virtual string* Serialize() override;
		virtual void Serialize(std::stringstream& strStream) override;
		void Deserialize(string line);
		virtual void Deserialize(string line, const char* separator) override;
		//void Serialize(ofstream* output) override;

		#pragma region copy assignment operator
		//=====================================================================================================================
		//Suggestion given by chatGPT to solve C2280 and deleted function error:
		// it's possible that the error is related to the copy assignment operator of your YB_User class. If the YB_User 
		// class contains non-trivial member variables (like pointers or dynamically allocated resources), the default 
		// copy assignment operator generated by the compiler might not handle them correctly.
		// To resolve this, you should define a copy assignment operator for your YB_User class that performs a deep copy
		// of its members.
		YB_ViewBasis& operator=(const YB_ViewBasis& other) {
			if (this != &other) {
				Title = other.Title;
				ViewType = other.ViewType;
				w = other.w;
				h = other.h;
				// Deep copy of other resources, if any
				// For example, if 'myfile' is a pointer, you might need to handle it here

				// Call parent class copy assignment operator
				YB_DataBasis::operator=(other);
			}
			return *this;
		}
		//Also see to the explanation:
		// https://stackoverflow.com/questions/31264984/c-compiler-error-c2280-attempting-to-reference-a-deleted-function-in-visual
		//YB_ViewBasis& operator=(const YB_ViewBasis&) = default;		//this passed syntax check but doesn't solve the C2280
		//
		//The best solution will be try using pointers as much as possible instead of copying value, e.g.:
		//change the dataSet to map<int, TData*> in the persistor class;
		//However I will not go through this direction for simplicity consideration.
		//=====================================================================================================================
		#pragma endregion



	protected:
		virtual vector<char*>* Render();			// multiple lines text
		virtual void OnKeyInput(char* keycode);
		virtual void OnItemReturned(YB_ViewMessageBasis msg);
		void FillBackground(char background);

	private:
		map<int, YB_ViewItemBasis> viewItems = {};
		vector<char*>* viewArray = {};

		//const char persistentSeparator = ';';		//indicate how the persistence string was separated (for specific class, usually 1st level).
	};
}
#endif //YB_ViewBasis_H
